## Main
snippet ao
    add_object(${1}, ${2});

snippet ss
    set_short(${1});

snippet sl
    set_long(${1});

snippet tp
options word
    this_player()

snippet to
options word
    this_object()

snippet Room
    #include <ansi.h>
    #include <mudlib.h>

    inherit ROOM;

    void reset(status arg) {

        // Add monsters if required.

        if(arg) {
            return;
        }

        set_short("");
        set_long("");

        set_items(({ }));

        set_smell("\n");
        set_listen("\n");

        set_exits(({ }));
    }

snippet wr
    write(sprintf("${1}\n", ${2}));

snippet say
    say(sprintf("${1}\n", ${2}));

snippet tell
    tell_object(${1}, sprintf("${2}\n", ${3}));

snippet sp
options word
    sprintf("${1}", ${2});

snippet qn
options word
    query_name()

snippet log
    log_file("${1}", sprintf("${2}", ${3}));

snippet de
    log_file("DEBUG", sprintf("${1}", ${2}));${3}

snippet member
options word
    member(${1:array}, ${2:element})${3}

snippet tja
    tell_object(find_player("james"), sprintf("${1}\n", ${2}));

snippet treasure
    #include <mudlib.h>
    #include <ansi.h>

    inherit TREASURE;

    void reset (int arg){
        ::reset(arg);
        if(arg) return;

        set_weight(${1:weight});
        set_name(${2:name});
        set_short(${3:short}+NORM);
        set_long("${4:long}.\n");
        set_no_save(${5:nosave?});
    }

snippet addob
        add_object("${1:id}", "${2:path}");

snippet for
        for (int ${1:#var} = 0; $1 < ${2:#limit}; $1 += 1) {
            ${3:body}
        }

snippet query
    ${1:type} query_${2:variable name} () {
        return $2;
    }

snippet pr
    printf("${1}", ${2});${3}

snippet env
options word
    environment(${1})${2}
